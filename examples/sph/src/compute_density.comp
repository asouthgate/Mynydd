#version 450
layout(local_size_x = 256) in;

#extension GL_GOOGLE_include_directive : enable
#include "morton_kernels.comp.kern"


struct CellInfo {
    uint left;
    uint right;
};

// THESE SHOULD BE SORTED
layout(set = 0, binding = 0) readonly buffer InputDensities {
    float input_densities[];
};

layout(set = 0, binding = 1) readonly buffer SortedKeys {
    uint keys[];
};

layout(set = 0, binding = 3) readonly buffer Cells {
    CellInfo cells[];
};

layout(set = 0, binding = 4) buffer Densities {
    float densities[];
};

void main() {
    uint idx = gl_GlobalInvocationID.x;
    uint key = keys[idx];


    CellInfo cell = cells[key];

    float densitySum = 0.0;
    uint count = cell.right - cell.left;

    // Iterate all neighbors in the same bin
    for (uint i = cell.left; i < cell.right; i++) {
        densitySum += input_densities[i];
    }

    // Store average density (or 0 if no neighbors)
    densities[idx] = (count > 0) ? densitySum / float(count) : 0.0;
}