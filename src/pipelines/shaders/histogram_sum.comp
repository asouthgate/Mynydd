#version 450

layout(local_size_x = 256) in;

layout(set = 0, binding = 0) readonly buffer PartialHistograms {
    uint partialHistogram[]; // size = groupCount * numBins
};

layout(set = 0, binding = 1) buffer FinalHistogram {
    uint finalHistogram[]; // size = numBins
};

layout(set = 0, binding = 2) uniform Params {
    uint groupCount;
    uint numBins;
} pc;

void main() {
    uint lid = gl_LocalInvocationID.x;

    // Thread 0 clears the output buffer
    if (lid == 0) {
        for (uint i = 0; i < pc.numBins; ++i) {
            finalHistogram[i] = 0u;
        }
    }
    barrier();

    // Threads sum bins in a strided loop
    for (uint bin = lid; bin < pc.numBins; bin += gl_WorkGroupSize.x) {
        uint sum = 0u;
        for (uint group = 0; group < pc.groupCount; ++group) {
            sum += partialHistogram[group * pc.numBins + bin];
        }
        finalHistogram[bin] = sum;
    }
}
