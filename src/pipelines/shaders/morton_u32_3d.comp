#version 450
layout(local_size_x = 64) in;

#extension GL_GOOGLE_include_directive : enable

#include "morton_kernels.comp.kern"

struct Particle {
    vec3 position;
};

layout(set = 0, binding = 0) buffer inputData {
    Particle particles[];
} inData;

layout(set = 0, binding = 1) buffer outputData {
    uint keys[];
} outData;

layout(set = 0, binding = 2) uniform Params {
    uint nBits;
    uint nParticles;
    vec3 domainMin;
    vec3 domainMax;
} params;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (gl_GlobalInvocationID.x >= params.nParticles) {
        outData.keys[idx] = 9999; // for debugging; not an error, intentional
        return;
    }
    vec3 norm_pos = (inData.particles[idx].position - params.domainMin) / (params.domainMax - params.domainMin);

    uint key = morton3D_loop(
        binPosition(norm_pos.x, params.nBits),
        binPosition(norm_pos.y, params.nBits),
        binPosition(norm_pos.z, params.nBits),
        params.nBits
    );

    outData.keys[idx] = key;
}