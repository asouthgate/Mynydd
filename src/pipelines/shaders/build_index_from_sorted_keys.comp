#version 450
layout(local_size_x = 256) in;


#extension GL_GOOGLE_include_directive : enable

#include "morton_kernels.comp.kern"


struct CellInfo {
    uint left;
    uint right;
};

// Sorted Morton keys for each particle
layout(set = 0, binding = 0) readonly buffer SortedKeys {
    uint keys[];
};

// Output: per-cell start index and count
layout(set = 0, binding = 1) buffer Cells {
    CellInfo cells[];
};

layout(set = 0, binding = 2) uniform Params {
    uint nBits;
    uint nParticles;
    vec3 domainMin;
    vec3 domainMax;
} pc;


void main() {
    uint i = gl_GlobalInvocationID.x;
    if (i >= pc.nParticles) return;
    uint key = keys[i];

    // Left boundary: first particle in cell
    if (i == 0 || key != keys[i - 1]) {
        cells[key].left = i;
    }

    barrier();

    // Right boundary: last particle in cell
    if (i == pc.nParticles - 1 || key != keys[i + 1]) {
        cells[key].right = i + 1;
    }

}
